name: Playwright Tests

on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
      - ".github/"
      - ".husky/"
      - "test-results/"
      - ".vscode/"
      - "scripts/"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 10
    if: ${{!contains( github.event.pull_request.body, '[skip ci]' )}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node-and-pnpm-then-restore-packages
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "::set-output name=version::$( sh .github/scripts/get-playwright-version.sh )"
      - name: Cache playwright binaries
        uses: actions/cache@v2
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: "${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}"
          restore-keys: ${{ runner.os }}-playwright-
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Install Playwright system dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
